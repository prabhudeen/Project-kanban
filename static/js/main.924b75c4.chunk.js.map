{"version":3,"sources":["utils/api.js","components/Ticket.jsx","components/KanbanBoard.jsx","components/Header.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["fetchTickets","async","axios","get","concat","data","tickets","priorityNames","4","3","2","1","0","Ticket","_ref","ticket","priorityName","priority","userImage","getRandomImage","randomImageNumber","Math","floor","random","React","createElement","Card","className","style","marginBottom","CardMedia","component","alt","userId","height","width","image","objectFit","borderRadius","marginLeft","marginTop","CardContent","Typography","variant","title","status","KanbanBoard","isLoading","useQuery","groupingOption","setGroupingOption","useState","groupedTickets","groupTickets","Container","overflowX","Select","value","onChange","e","target","MenuItem","DragDropContext","Grid","container","spacing","Object","entries","map","group","ticketsInGroup","item","key","xs","sm","md","lg","Droppable","droppableId","direction","provided","Paper","assign","droppableProps","ref","innerRef","display","flexDirection","index","Draggable","id","draggableId","draggableProps","dragHandleProps","displayPriorityName","placeholder","forEach","push","Header","AppBar","position","Toolbar","sx","flexGrow","queryClient","QueryClient","App","QueryClientProvider","client","ReactQueryDevtools","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.924b75c4.chunk.js","sourcesContent":["// utils/api.js\nimport axios from 'axios';\n\nconst BASE_URL = 'https://api.quicksell.co/v1/internal/frontend-assignment';\n\nexport const fetchTickets = async () => {\n  const response = await axios.get(`${BASE_URL}`);\n  return response.data.tickets;\n};\n","// components/Ticket.js\nimport React from 'react';\nimport { Card, CardContent, Typography, CardMedia } from '@mui/material';\n\nconst priorityNames = {\n  4: 'Urgent',\n  3: 'High',\n  2: 'Medium',\n  1: 'Low',\n  0: 'No priority',\n};\n\nconst getRandomImage = () => {\n  const randomImageNumber = Math.floor(Math.random() * 10) + 1; // Adjust the range based on the number of placeholder images\n  return `https://placekitten.com/10/10?image=${randomImageNumber}`;\n};\n\nconst Ticket = ({ ticket }) => {\n  const priorityName = priorityNames[ticket.priority];\n  const userImage = ticket.userImage || getRandomImage();\n\n  return (\n    <Card className={`ticket-card priority-${ticket.priority}`} style={{ marginBottom: '10px' }}>\n      <CardMedia\n        component=\"img\"\n        alt={`User: ${ticket.userId}`}\n        height=\"3%\"\n        width=\"3%\"\n        image={userImage}\n        style={{ objectFit: 'cover', borderRadius: '50%', width:\"9%\", marginLeft: '90%', marginTop: '10px' }}\n      />\n      <CardContent>\n        <Typography variant=\"h6\">{ticket.title}</Typography>\n        <Typography>Status: {ticket.status}</Typography>\n        <Typography>User: {ticket.userId}</Typography>\n        <Typography>Priority: {priorityName}</Typography>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default Ticket;\n","// components/KanbanBoard.js\nimport React, { useState, useEffect } from 'react';\nimport { useQuery } from 'react-query';\nimport { fetchTickets } from '../utils/api';\nimport Ticket from './Ticket';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { Container, Paper, Select, MenuItem, Grid } from '@mui/material';\n\nconst priorityNames = {\n  4: 'Urgent',\n  3: 'High',\n  2: 'Medium',\n  1: 'Low',\n  0: 'No priority',\n};\n\nconst KanbanBoard = () => {\n  const { data: tickets, isLoading } = useQuery('tickets', fetchTickets);\n  const [groupingOption, setGroupingOption] = useState('status');\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  const groupedTickets = groupTickets(tickets, groupingOption);\n\n  return (\n    <Container style={{ overflowX: 'auto' , marginTop:\"20px\"}}>\n\n      <div>\n        <label>\n          Group By:\n          <Select value={groupingOption} onChange={(e) => setGroupingOption(e.target.value)}>\n            <MenuItem value=\"status\">Status</MenuItem>\n            <MenuItem value=\"userId\">User</MenuItem>\n            <MenuItem value=\"priority\">Priority</MenuItem>\n          </Select>\n        </label>\n      </div>\n    <div style={{ overflowX: 'auto' }}>\n      <DragDropContext>\n        <Grid container spacing={3} >\n          {Object.entries(groupedTickets).map(([group, ticketsInGroup]) => (\n            <Grid item key={group} xs={12} sm={6} md={4} lg={3}>\n              <Droppable droppableId={group} direction=\"horizontal\">\n                {(provided) => (\n                  <Paper {...provided.droppableProps} ref={provided.innerRef}>\n                    <h2>{group}</h2>\n                    <div style={{ display: 'flex', flexDirection: 'column' }}>\n                      {ticketsInGroup.map((ticket, index) => (\n                        <Draggable key={ticket.id} draggableId={ticket.id} index={index}>\n                          {(provided) => (\n                            <div\n                              {...provided.draggableProps}\n                              {...provided.dragHandleProps}\n                              ref={provided.innerRef}\n                            >\n                              <Ticket ticket={ticket} displayPriorityName={groupingOption === 'priority'} />\n                            </div>\n                          )}\n                        </Draggable>\n                      ))}\n                    </div>\n                    {provided.placeholder}\n                  </Paper>\n                )}\n              </Droppable>\n            </Grid>\n          ))}\n        </Grid>\n      </DragDropContext>\n      </div>\n    </Container>\n  );\n};\n\nexport default KanbanBoard;\n\nconst groupTickets = (tickets, groupingOption) => {\n  const groupedTickets = {};\n\n  tickets.forEach((ticket) => {\n    const group = groupingOption === 'priority' ? priorityNames[ticket[groupingOption]] : ticket[groupingOption];\n    if (!groupedTickets[group]) {\n      groupedTickets[group] = [];\n    }\n    groupedTickets[group].push(ticket);\n  });\n\n  return groupedTickets;\n};\n","// components/NavigationBar.js\nimport React from 'react';\nimport { AppBar, Toolbar, Typography, Container } from '@mui/material';\n\nconst Header = () => {\n  return (\n    <AppBar position=\"static\">\n      <Container>\n        <Toolbar>\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n          Kanban Board\n          </Typography>\n          {/* Add more navigation items or components here */}\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","// App.js\nimport React from 'react';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { ReactQueryDevtools } from 'react-query/devtools';\nimport KanbanBoard from './components/KanbanBoard';\nimport Header from './components/Header';\n\nconst queryClient = new QueryClient();\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <div>\n       <Header></Header>\n        <KanbanBoard />\n      </div>\n      <ReactQueryDevtools />\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}